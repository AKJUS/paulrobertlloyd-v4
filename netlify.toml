[build]
command = "npm run build"
publish = "www"

[context.production]
command = "git submodule update --init --remote && npm run deploy"

  [context.production.environment]
  ELEVENTY_ENV = "production"
  NODE_ENV = "production"
  NODE_VERSION = "16"
  TZ = "Europe/London"

[[plugins]]
package = "netlify-plugin-cache"

  [plugins.inputs]
  paths = [ ".cache" ]

[[headers]]
for = "/*"

  [headers.values]
  Content-Security-Policy = "script-src 'self' 'nonce-bVgyaDV6YU9tdThnZ2wwckZBNnFnc1Z6Wk40SnY2U0pmbjdTUjQ3MVg2RTFCbnEwN3g=' *.codepen.io; style-src 'self' 'unsafe-inline'; object-src 'self'; img-src 'self' data: *.mapbox.com i.ytimg.com i.vimeocdn.com raw.githubusercontent.com kit.paulrobertlloyd.com"
  Referrer-Policy = "no-referrer, strict-origin-when-cross-origin"
  Strict-Transport-Security = "max-age=31536000; includeSubDomains; preload"
  X-Content-Type-Options = "nosniff"
  X-Frame-Options = "SAMEORIGIN"
  X-XSS-Protection = "1; mode=block"

[[headers]]
for = "/*.ico"

  [headers.values]
  Content-Type = "image/x-icon"

[[headers]]
for = "/*.js"

  [headers.values]
  Content-Type = "text/javascript; charset=utf-8"

[[headers]]
for = "/*.json"

  [headers.values]
  Content-Type = "application/json; charset=utf-8"

[[headers]]
for = "/*.webmanifest"

  [headers.values]
  Content-Type = "application/manifest+json; charset=utf-8"

[[redirects]]
from = "/favicon.ico"
to = "/assets/icons/favicon.ico"
status = 200
force = true

[[redirects]]
from = "/articles/"
to = "/articles/page/:page"
status = 200
force = true

  [redirects.query]
  page = ":page"

[[redirects]]
from = "/bookmarks/"
to = "/bookmarks/page/:page"
status = 200
force = true

  [redirects.query]
  page = ":page"

[[redirects]]
from = "/events/"
to = "/events/page/:page"
status = 200
force = true

  [redirects.query]
  page = ":page"

[[redirects]]
from = "/notes/"
to = "/notes/page/:page"
status = 200
force = true

  [redirects.query]
  page = ":page"

[[redirects]]
from = "/photos/"
to = "/photos/page/:page"
status = 200
force = true

  [redirects.query]
  page = ":page"

[[redirects]]
from = "/replies/"
to = "/replies/page/:page"
status = 200
force = true

  [redirects.query]
  page = ":page"
